.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "HTTP::Headers::ActionPack::MediaTypeList 3"
.TH HTTP::Headers::ActionPack::MediaTypeList 3 "2013-06-18" "perl v5.12.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTTP::Headers::ActionPack::MediaTypeList \- A Priority List customized for Media Types
.SH "VERSION"
.IX Header "VERSION"
version 0.09
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use HTTP::Headers::ActionPack::MediaTypeList;
\&
\&  # normal constructor
\&  my $list = HTTP::Headers::ActionPack::MediaTypeList\->new(
\&      HTTP::Headers::ActionPack::MediaType\->new(\*(Aqaudio/*\*(Aq, q => 0.2 ),
\&      HTTP::Headers::ActionPack::MediaType\->new(\*(Aqaudio/basic\*(Aq, q => 1.0 )
\&  );
\&
\&  # you can also specify the \*(Aqq\*(Aq
\&  # rating independent of the
\&  # media type definition
\&  my $list = HTTP::Headers::ActionPack::MediaTypeList\->new(
\&      [ 0.2 => HTTP::Headers::ActionPack::MediaType\->new(\*(Aqaudio/*\*(Aq, q => 0.2 )     ],
\&      [ 1.0 => HTTP::Headers::ActionPack::MediaType\->new(\*(Aqaudio/basic\*(Aq ) ]
\&  );
\&
\&  # or from a string
\&  my $list = HTTP::Headers::ActionPack::MediaTypeList\->new_from_string(
\&      \*(Aqaudio/*; q=0.2, audio/basic\*(Aq
\&  );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a subclass of the HTTP::Headers::ActionPack::PriorityList
class with some specific media-type features. It is the default object
used to parse most of the \f(CW\*(C`Accept\*(C'\fR header since they will often contain
more then one media type.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP """iterable""" 4
.el .IP "\f(CWiterable\fR" 4
.IX Item "iterable"
This returns the same data type as the parent (two element
\&\s-1ARRAY\s0 ref with quality and choice), but the choice element
will be a HTTP::Headers::ActionPack::MediaType object. This is
also sorted in a very specific manner in order to align with
\&\s-1RFC\-2616\s0 Sec14.
.Sp
.Vb 4
\&  Media ranges can be overridden by more specific
\&  media ranges or specific media types. If more
\&  than one media range applies to a given type,
\&  the most specific reference has precedence.
.Ve
.ie n .IP """canonicalize_choice""" 4
.el .IP "\f(CWcanonicalize_choice\fR" 4
.IX Item "canonicalize_choice"
If this is passed a string, it returns a new
HTTP::Headers::ActionPack::MediaType object from that string. If it
receives an object it simply returns that object as is.
.SH "AUTHOR"
.IX Header "AUTHOR"
Stevan Little <stevan.little@iinteractive.com>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Andrew Nelson <anelson@cpan.org>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Infinity Interactive, Inc..
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
