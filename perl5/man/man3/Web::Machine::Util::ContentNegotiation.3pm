.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Web::Machine::Util::ContentNegotiation 3"
.TH Web::Machine::Util::ContentNegotiation 3 "2015-07-05" "perl v5.12.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Web::Machine::Util::ContentNegotiation \- Module to handle content negotiation
.SH "VERSION"
.IX Header "VERSION"
version 0.16
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Web::Machine::Util::ContentNegotiation;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a set of functions used in content negotiation.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP """choose_media_type ( $provided, $header )""" 4
.el .IP "\f(CWchoose_media_type ( $provided, $header )\fR" 4
.IX Item "choose_media_type ( $provided, $header )"
Given an \s-1ARRAY\s0 ref of media type strings and an \s-1HTTP\s0 header, this will
return the matching HTTP::Headers::ActionPack::MediaType instance.
.ie n .IP """match_acceptable_media_type ( $to_match, $accepted )""" 4
.el .IP "\f(CWmatch_acceptable_media_type ( $to_match, $accepted )\fR" 4
.IX Item "match_acceptable_media_type ( $to_match, $accepted )"
Given a media type string to match and an \s-1ARRAY\s0 ref of media type objects,
this will return the first matching one.
.ie n .IP """choose_language ( $provided, $header )""" 4
.el .IP "\f(CWchoose_language ( $provided, $header )\fR" 4
.IX Item "choose_language ( $provided, $header )"
Given a list of language codes and an \s-1HTTP\s0 header value, this will attempt
to negotiate the best language match.
.ie n .IP """choose_charset ( $provided, $header )""" 4
.el .IP "\f(CWchoose_charset ( $provided, $header )\fR" 4
.IX Item "choose_charset ( $provided, $header )"
Given a list of charset name and an \s-1HTTP\s0 header value, this will attempt
to negotiate the best charset match.
.ie n .IP """choose_encoding ( $provided, $header )""" 4
.el .IP "\f(CWchoose_encoding ( $provided, $header )\fR" 4
.IX Item "choose_encoding ( $provided, $header )"
Given a list of encoding name and an \s-1HTTP\s0 header value, this will attempt
to negotiate the best encoding match.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Stevan Little <stevan@cpan.org>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Andreas Marienborg <andreas.marienborg@gmail.com>
.IP "\(bu" 4
Andrew Nelson <anelson@cpan.org>
.IP "\(bu" 4
Arthur Axel 'fREW' Schmidt <frioux@gmail.com>
.IP "\(bu" 4
Carlos Fernando Avila Gratz <cafe@q1software.com>
.IP "\(bu" 4
Fayland Lam <fayland@gmail.com>
.IP "\(bu" 4
George Hartzell <hartzell@alerce.com>
.IP "\(bu" 4
Gregory Oschwald <goschwald@maxmind.com>
.IP "\(bu" 4
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 4
John \s-1SJ\s0 Anderson <genehack@genehack.org>
.IP "\(bu" 4
Mike Raynham <enquiries@mikeraynham.co.uk>
.IP "\(bu" 4
Mike Raynham <mike.raynham@spareroom.co.uk>
.IP "\(bu" 4
Nathan Cutler <ncutler@suse.cz>
.IP "\(bu" 4
Olaf Alders <olaf@wundersolutions.com>
.IP "\(bu" 4
Thomas Sibley <tsibley@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2015 by Infinity Interactive, Inc..
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
